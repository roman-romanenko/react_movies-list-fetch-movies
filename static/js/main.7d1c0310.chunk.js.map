{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","props","onAdd","moviesList","useState","query","setQuery","setMovie","isLoading","setIsLoading","error","setError","double","setDouble","handleFindMovie","useCallback","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","onSubmit","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","disabled","length","onClick","findIndex","film","App","setMovies","prev","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,0BCFNC,EAA6B,SAACC,GACzC,IAAQC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAEf,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAuB,MAAjD,mBAAOjB,EAAP,KAAcoB,EAAd,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAA0BL,oBAAS,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAA4BP,oBAAS,GAArC,mBAAOQ,EAAP,KAAeC,EAAf,KAEMC,EAAkBC,uBACtB,SAACC,GACCA,EAAMC,iBACNR,GAAa,GACbI,GAAU,GCpBT,SAAkBR,GACvB,OAAOa,MAAM,GAAD,OAHE,2CAGF,cAAiBb,IAC1Bc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDiBPC,CAASpB,GACNc,MAAK,SAAAO,GACA,UAAWA,GACbf,GAAS,GACTJ,EAAS,OAETA,EAAS,CACPf,MAAOkC,EAASC,MAChBlC,YAAaiC,EAASE,KACtBtC,OAA4B,QAApBoC,EAASG,OACb,4DACAH,EAASG,OACblC,QAAQ,0BAAD,OAA4B+B,EAASI,QAC5C/B,OAAQ2B,EAASI,YAItBC,SAAQ,kBAAMtB,GAAa,QAC7B,CAACJ,IAqBN,OACE,qCACE,uBAAMjB,UAAU,aAAa4C,SAAUlB,EAAvC,UACE,sBAAK1B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6C,QAAQ,cAAjC,yBAIA,qBAAK7C,UAAU,UAAf,SACE,uBACE,UAAQ,aACR8C,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhD,UAAU,kBACViD,MAAOhC,EACPiC,SAAU,SAACC,GACTjC,EAASiC,EAAEC,OAAOH,OAClB1B,GAAS,QAIdD,GAEG,mBAAGtB,UAAU,iBAAiB,UAAQ,eAAtC,qDAON,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR8C,KAAK,SACL9C,UAAWqD,IAAW,SACpB,WAAY,CAAE,aAAcjC,IAC9BkC,SAA2B,IAAjBrC,EAAMsC,OALlB,4BAWF,qBAAKvD,UAAU,UAAf,SACE,wBACE,UAAQ,YACR8C,KAAK,SACL9C,UAAU,oBACVwD,QAnEQ,YAIH,IAHDzC,EACX0C,WAAU,SAAAC,GAAI,OAAIA,EAAKtD,SAAL,OAAeL,QAAf,IAAeA,OAAf,EAAeA,EAAOK,UAQvCL,IACF0B,GAAU,GACVX,EAAMf,GACNoB,EAAS,MACTD,EAAS,KATTO,GAAU,IA+DF6B,SAAoB,OAAVvD,EALZ,qCAYLyB,GAEC,oBAAIxB,UAAU,eAAd,mEAKDsB,EACG,0DAEA,qBAAKtB,UAAU,YAAY,UAAQ,mBAAnC,SACa,OAAVD,GAEC,qCACE,oBAAIC,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,aEpIrB4D,EAAM,WACjB,MAA4B3C,mBAAkB,IAA9C,mBAAOP,EAAP,KAAemD,EAAf,KAMA,OACE,sBAAK5D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWc,MAXH,SAAC4C,GACbE,GAAU,SAAAC,GAAI,4BAAQA,GAAR,CAAcH,QAUC3C,WAAYN,UChB7CqD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7d1c0310.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAdd: (film: Movie) => void;\n  moviesList: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { onAdd, moviesList } = props;\n\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [double, setDouble] = useState(false);\n\n  const handleFindMovie = useCallback(\n    (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      setIsLoading(true);\n      setDouble(false);\n\n      getMovie(query)\n        .then(response => {\n          if ('Error' in response) {\n            setError(true);\n            setMovie(null);\n          } else {\n            setMovie({\n              title: response.Title,\n              description: response.Plot,\n              imgUrl: response.Poster === 'N/A'\n                ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n                : response.Poster,\n              imdbUrl: `https://www.imdb/title/${response.imdbID}`,\n              imdbId: response.imdbID,\n            });\n          }\n        })\n        .finally(() => setIsLoading(false));\n    }, [query],\n  );\n\n  const handleOnAdd = () => {\n    const index = moviesList\n      .findIndex(film => film.title === movie?.title);\n\n    if (index !== -1) {\n      setDouble(true);\n\n      return;\n    }\n\n    if (movie) {\n      setDouble(false);\n      onAdd(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleFindMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n          {error\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button',\n                'is-light', { 'is-loading': isLoading })}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleOnAdd}\n              disabled={movie === null}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {double\n      && (\n        <h2 className=\"double_movie\">\n          This movie is already in your list. Try another query\n        </h2>\n      )}\n\n      {error\n        ? <h2>Not films for your query</h2>\n        : (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            {movie !== null\n            && (\n              <>\n                <h2 className=\"title\">Preview</h2>\n                <MovieCard movie={movie} />\n              </>\n            )}\n          </div>\n        )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5a0fee11';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onAdd = (film: Movie) => {\n    setMovies(prev => [...prev, film]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAdd={onAdd} moviesList={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}